version: '3.8'

services:
  tradebot:
    build: .
    container_name: tradebot
    restart: unless-stopped
    volumes:
      - ./data:/data
      - ./.env:/app/.env:ro
    environment:
      - TZ=UTC
    command: ["python", "run_tradebot.py", "start", "--auto-restart", "--restart-interval", "15"]
    healthcheck:
      test: ["CMD", "python", "-c", "import sqlite3; conn = sqlite3.connect('/data/db/tradebot.db'); conn.execute('SELECT 1'); conn.close()"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  scheduler:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: tradebot-scheduler
    restart: unless-stopped
    command: ["python", "scheduler.py"]
    volumes:
      - ./data:/data
      - ./.env:/app/.env:ro
    environment:
      - TZ=UTC
    depends_on:
      - tradebot
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backup:
    image: alpine:latest
    container_name: tradebot-backup
    restart: unless-stopped
    volumes:
      - ./data:/data
      - ./backups:/backups
    command: >
      sh -c "
        apk add --no-cache sqlite tar gzip;
        while true;
        do
          echo 'Creating backup...';
          mkdir -p /backups;
          DATE=$$(date +%Y%m%d_%H%M%S);
          sqlite3 /data/db/tradebot.db '.backup /tmp/tradebot_$${DATE}.db';
          tar -czf /backups/tradebot_$${DATE}.tar.gz -C /tmp tradebot_$${DATE}.db;
          rm /tmp/tradebot_$${DATE}.db;
          find /backups -name 'tradebot_*.tar.gz' -type f -mtime +7 -delete;
          echo 'Backup completed';
          sleep 86400;
        done
      "
    depends_on:
      - tradebot
      
  dashboard:
    build: .
    container_name: tradebot-dashboard
    restart: unless-stopped
    command: ["python", "-m", "http.server", "8080"]
    ports:
      - "8080:8080"
    volumes:
      - ./data:/data
      - ./.env:/app/.env:ro
    depends_on:
      - tradebot
    entrypoint: >
      sh -c "
        python generate_html_dashboard.py &&
        cd /app &&
        python -m http.server 8080
      "
